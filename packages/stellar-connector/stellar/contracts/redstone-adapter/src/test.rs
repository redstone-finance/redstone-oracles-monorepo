#![cfg(test)]

use super::*;
use soroban_sdk::{Bytes, Env};

#[test]
fn test() {
    let mut ledger = Env::default().to_ledger_snapshot();
    ledger.timestamp = 1749217440;
    let env = Env::from_ledger_snapshot(ledger);

    let contract_id = env.register(Contract, ());
    let client = ContractClient::new(&env, &contract_id);
    let payload: Bytes = Bytes::from_slice(&env, &get_test_payload());

    let words = client.write_prices(&payload);
    assert_eq!(words, (1749217440000, 250162022275));
}

pub fn get_test_payload() -> [u8; 156] {
    [
        0x45, 0x54, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a,
        0x3e, 0xd1, 0x87, 0x83, 0x01, 0x97, 0x45, 0x7b, 0xf1, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
        0x00, 0x01, 0x31, 0xde, 0x9b, 0x98, 0x7c, 0xa3, 0x73, 0x84, 0x25, 0xc1, 0x19, 0xc0, 0x72,
        0x42, 0x94, 0xe3, 0x70, 0x4d, 0x9b, 0x34, 0x7d, 0xd3, 0x9b, 0xf8, 0x29, 0xb5, 0x4e, 0x00,
        0xfa, 0xde, 0x34, 0x41, 0x5d, 0x9d, 0x00, 0x8f, 0xd5, 0x9e, 0x26, 0xaa, 0x66, 0x87, 0xcb,
        0x8a, 0xd7, 0x97, 0xc0, 0x7d, 0x4f, 0x74, 0x39, 0xdb, 0xbb, 0x1a, 0x70, 0x35, 0xf4, 0xf4,
        0x3b, 0x93, 0x3e, 0x45, 0x84, 0xb2, 0x1b, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
        0xed, 0x57, 0x01, 0x1e, 0x00, 0x00,
    ]
}
