/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export type LastUpdateDetailsStruct = {
  dataTimestamp: PromiseOrValue<BigNumberish>;
  blockTimestamp: PromiseOrValue<BigNumberish>;
  value: PromiseOrValue<BigNumberish>;
};

export type LastUpdateDetailsStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber
] & { dataTimestamp: BigNumber; blockTimestamp: BigNumber; value: BigNumber };

export interface IStylusAdapterInterface extends utils.Interface {
  functions: {
    "getLastUpdateDetailsUnsafeForMany(bytes32[])": FunctionFragment;
    "getUniqueSignersThreshold()": FunctionFragment;
    "writePrices(bytes32[],bytes)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "getLastUpdateDetailsUnsafeForMany"
      | "getUniqueSignersThreshold"
      | "writePrices"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "getLastUpdateDetailsUnsafeForMany",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getUniqueSignersThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "writePrices",
    values: [PromiseOrValue<BytesLike>[], PromiseOrValue<BytesLike>]
  ): string;

  decodeFunctionResult(
    functionFragment: "getLastUpdateDetailsUnsafeForMany",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUniqueSignersThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "writePrices",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IStylusAdapter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IStylusAdapterInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getLastUpdateDetailsUnsafeForMany(
      dataFeedIds: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<
      [LastUpdateDetailsStructOutput[]] & {
        detailsForFeeds: LastUpdateDetailsStructOutput[];
      }
    >;

    getUniqueSignersThreshold(overrides?: CallOverrides): Promise<[number]>;

    writePrices(
      dataFeedsIds: PromiseOrValue<BytesLike>[],
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  getLastUpdateDetailsUnsafeForMany(
    dataFeedIds: PromiseOrValue<BytesLike>[],
    overrides?: CallOverrides
  ): Promise<LastUpdateDetailsStructOutput[]>;

  getUniqueSignersThreshold(overrides?: CallOverrides): Promise<number>;

  writePrices(
    dataFeedsIds: PromiseOrValue<BytesLike>[],
    payload: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    getLastUpdateDetailsUnsafeForMany(
      dataFeedIds: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<LastUpdateDetailsStructOutput[]>;

    getUniqueSignersThreshold(overrides?: CallOverrides): Promise<number>;

    writePrices(
      dataFeedsIds: PromiseOrValue<BytesLike>[],
      payload: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    getLastUpdateDetailsUnsafeForMany(
      dataFeedIds: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUniqueSignersThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    writePrices(
      dataFeedsIds: PromiseOrValue<BytesLike>[],
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getLastUpdateDetailsUnsafeForMany(
      dataFeedIds: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUniqueSignersThreshold(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    writePrices(
      dataFeedsIds: PromiseOrValue<BytesLike>[],
      payload: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
