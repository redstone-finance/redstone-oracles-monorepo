/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.94.6
*/

import type {
  AbstractAddress,
  Account,
  BigNumberish,
  BN,
  Bytes,
  FunctionFragment,
  InvokeFunction,
  Provider,
  StorageSlot,
} from "fuels";
import { Contract, Interface } from "fuels";

import type { Vec } from "./common";

const abi = {
  programType: "contract",
  specVersion: "1",
  encodingVersion: "1",
  concreteTypes: [
    {
      type: "()",
      concreteTypeId:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
    },
    {
      type: "b256",
      concreteTypeId:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
    },
    {
      type: "struct std::bytes::Bytes",
      concreteTypeId:
        "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
      metadataTypeId: 2,
    },
    {
      type: "struct std::vec::Vec<b256>",
      concreteTypeId:
        "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198",
      metadataTypeId: 5,
      typeArguments: [
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      ],
    },
    {
      type: "struct std::vec::Vec<u256>",
      concreteTypeId:
        "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      metadataTypeId: 5,
      typeArguments: [
        "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
      ],
    },
    {
      type: "u256",
      concreteTypeId:
        "1b5759d94094368cfd443019e7ca5ec4074300e544e5ea993a979f5da627261e",
    },
    {
      type: "u64",
      concreteTypeId:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
    },
  ],
  metadataTypes: [
    {
      type: "generic T",
      metadataTypeId: 0,
    },
    {
      type: "raw untyped ptr",
      metadataTypeId: 1,
    },
    {
      type: "struct std::bytes::Bytes",
      metadataTypeId: 2,
      components: [
        {
          name: "buf",
          typeId: 3,
        },
        {
          name: "len",
          typeId:
            "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
        },
      ],
    },
    {
      type: "struct std::bytes::RawBytes",
      metadataTypeId: 3,
      components: [
        {
          name: "ptr",
          typeId: 1,
        },
        {
          name: "cap",
          typeId:
            "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
        },
      ],
    },
    {
      type: "struct std::vec::RawVec",
      metadataTypeId: 4,
      components: [
        {
          name: "ptr",
          typeId: 1,
        },
        {
          name: "cap",
          typeId:
            "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
        },
      ],
      typeParameters: [0],
    },
    {
      type: "struct std::vec::Vec",
      metadataTypeId: 5,
      components: [
        {
          name: "buf",
          typeId: 4,
          typeArguments: [
            {
              name: "",
              typeId: 0,
            },
          ],
        },
        {
          name: "len",
          typeId:
            "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
        },
      ],
      typeParameters: [0],
    },
  ],
  functions: [
    {
      inputs: [
        {
          name: "feed_ids",
          concreteTypeId:
            "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
        },
        {
          name: "payload",
          concreteTypeId:
            "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
        },
      ],
      name: "get_prices",
      output:
        "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "signers",
          concreteTypeId:
            "32559685d0c9845f059bf9d472a0a38cf77d36c23dfcffe5489e86a65cdd9198",
        },
        {
          name: "signer_count_threshold",
          concreteTypeId:
            "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
        },
      ],
      name: "init",
      output:
        "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      attributes: [
        {
          name: "storage",
          arguments: ["write"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "feed_ids",
          concreteTypeId:
            "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
        },
      ],
      name: "read_prices",
      output:
        "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [],
      name: "read_timestamp",
      output:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      attributes: [
        {
          name: "storage",
          arguments: ["read"],
        },
      ],
    },
    {
      inputs: [
        {
          name: "feed_ids",
          concreteTypeId:
            "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
        },
        {
          name: "payload",
          concreteTypeId:
            "cdd87b7d12fe505416570c294c884bca819364863efe3bf539245fa18515fbbb",
        },
      ],
      name: "write_prices",
      output:
        "742d7b76206a39cfad7eaec9b457390bbd0a92fe1da596db414daa0e4964bf82",
      attributes: [
        {
          name: "storage",
          arguments: ["write"],
        },
      ],
    },
  ],
  loggedTypes: [
    {
      logId: "1515152261580153489",
      concreteTypeId:
        "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
    },
    {
      logId: "8961848586872524460",
      concreteTypeId:
        "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
    },
  ],
  messagesTypes: [],
  configurables: [],
};

const storageSlots: StorageSlot[] = [
  {
    key: "1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5d",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "1d63cc2495bbf5570c9a6d7f632018dc033107e7f4452405c44601bb771a4a5e",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "60a0cdbce8a98b77f7787d61707e34e49f07e63db625fa49150884c367ce6fb5",
    value: "0000000000000000000000000000000000000000000000000000000000000000",
  },
  {
    key: "b1f36b0490303e8c214a62a62730609944f99bc5be24dc586b2361d992bd3853",
    value: "0000000000000001000000000000000000000000000000000000000000000000",
  },
];

export class PricesInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    get_prices: FunctionFragment;
    init: FunctionFragment;
    read_prices: FunctionFragment;
    read_timestamp: FunctionFragment;
    write_prices: FunctionFragment;
  };
}

export class Prices extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: PricesInterface;
  declare functions: {
    get_prices: InvokeFunction<
      [feed_ids: Vec<BigNumberish>, payload: Bytes],
      Vec<BN>
    >;
    init: InvokeFunction<
      [signers: Vec<string>, signer_count_threshold: BigNumberish],
      void
    >;
    read_prices: InvokeFunction<[feed_ids: Vec<BigNumberish>], Vec<BN>>;
    read_timestamp: InvokeFunction<[], BN>;
    write_prices: InvokeFunction<
      [feed_ids: Vec<BigNumberish>, payload: Bytes],
      Vec<BN>
    >;
  };

  constructor(
    id: string | AbstractAddress,
    accountOrProvider: Account | Provider
  ) {
    super(id, abi, accountOrProvider);
  }
}
