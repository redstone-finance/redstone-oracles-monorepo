module RedStonePriceFeed where

import DA.Optional
import DA.List
import DA.Assert
import IRedStonePriceFeed
import IRedStoneAdapter 
import RedStoneTypes

template RedStonePriceFeed
  with
    owner : Party
    viewers : [Party]
    adapterId : Text
    feedId : RedStoneFeedId
    description : Text
  where
    signatory owner
    observer viewers

    interface instance IRedStonePriceFeed for RedStonePriceFeed where
      view = RedStonePriceFeedView with owner, viewers, feedId, adapterId

      readData adapterCid = do
        adapter <- fetch adapterCid
        (view adapter).adapterId === adapterId
        
        result <- readPriceData (toInterface @IRedStoneAdapter adapter) [feedId]
        return $ fromSome (head result)

      readPrice adapterCid = do 
        result <- readData (toInterface @IRedStonePriceFeed this) adapterCid
        return result.value

      readTimestamp adapterCid = do
        result <- readData (toInterface @IRedStonePriceFeed this) adapterCid
        return result.timestamp
      
      getDescription _ = do 
        return description
