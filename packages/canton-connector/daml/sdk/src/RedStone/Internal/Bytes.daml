module RedStone.Internal.Bytes where

import DA.List as L
import RedStone.Internal.Trim
import RedStone.Internal.Math

-- Public

data Bytes = Bytes 
  with
    revList : [Int]
  deriving (Eq, Show)

fromList list = Bytes (L.reverse list)

bytesTrim n Bytes{revList} = 
    let 
        (rest, trimmed) = trimStart n revList
    in (Bytes rest, trimmed)

bytesTrimNum n bytes = 
    let
        (rest, trimmed) = bytesTrim n bytes 
    in (rest, beByteListToInt trimmed)
